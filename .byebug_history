continue
next
nexxt
next
continue
@current_session
next
continue
next
up
help
back
next
@current_session
next
@current_session
next
@current_session
exit
finish
help
run
continue all
continue
self.previous_close_and_date
continue
self.previous_close_and_date
continue
self.previous_close_and_date
continue
self.previous_close_and_date
exit
continue
exit
model.where(scraper_session_id: 2)
self.id
model.where(scraper_session_id: 1)
session_data
continue
model
continue
model
continue
model
exit
session_before_this
continue
session_before_this
exit
params[:details]
params
exit
cronline
exit
cronline['scraper_schedule']
cronline[:scraper_schedule]
cronline.scraper_schedule
cronline.to_s
Setting.first
cronline
continue
cron_human_readable.in?
cron_human_readable.methods
cron_human_readable.minutes
cron_human_readable
continue
Delayed::Job.find_by("job_metadata#>>'{scraper_session_id}'='#{@current_session.id}'")
@current_session
continue
@current_session
continue
step
next
exit
@current_session
